{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b5061051f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806318160ddd1461003b578063a9059cbb14610059575b600080fd5b610043610089565b604051610050919061039f565b60405180910390f35b610073600480360381019061006e919061032a565b610093565b6040516100809190610384565b60405180910390f35b6000600254905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156100e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561011a57600080fd5b61016b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102af90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506101fe826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161029d919061039f565b60405180910390a36001905092915050565b6000828211156102be57600080fd5b600082846102cc9190610410565b90508091505092915050565b60008082846102e791906103ba565b9050838110156102f657600080fd5b8091505092915050565b60008135905061030f816104bb565b92915050565b600081359050610324816104d2565b92915050565b6000806040838503121561033d57600080fd5b600061034b85828601610300565b925050602061035c85828601610315565b9150509250929050565b61036f81610456565b82525050565b61037e81610482565b82525050565b60006020820190506103996000830184610366565b92915050565b60006020820190506103b46000830184610375565b92915050565b60006103c582610482565b91506103d083610482565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104055761040461048c565b5b828201905092915050565b600061041b82610482565b915061042683610482565b9250828210156104395761043861048c565b5b828203905092915050565b600061044f82610462565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c481610444565b81146104cf57600080fd5b50565b6104db81610482565b81146104e657600080fd5b5056fea2646970667358221220deadd4e0cb6ef5bd54778a95dd0eb86ce10b9b80ec8de1bc287f615c764b174364736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FE DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x3BA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x324 DUP2 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP6 DUP3 DUP7 ADD PUSH2 0x300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35C DUP6 DUP3 DUP7 ADD PUSH2 0x315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x399 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D0 DUP4 PUSH2 0x482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 POP PUSH2 0x426 DUP4 PUSH2 0x482 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x439 JUMPI PUSH2 0x438 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP3 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x444 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DB DUP2 PUSH2 0x482 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xAD 0xD4 0xE0 0xCB PUSH15 0xF5BD54778A95DD0EB86CE10B9B80EC DUP14 0xE1 0xBC 0x28 PUSH32 0x615C764B174364736F6C63430008000033000000000000000000000000000000 ",
			"sourceMap": "87:756:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2753:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:2"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:2",
										"type": ""
									}
								],
								"src": "7:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "204:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "214:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "236:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "223:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "223:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "214:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "279:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "252:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "252:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "252:33:2"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "182:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "190:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "198:5:2",
										"type": ""
									}
								],
								"src": "152:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "380:324:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "426:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "435:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "438:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "428:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "428:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "428:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "401:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "410:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "397:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "397:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "422:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "393:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "393:32:2"
											},
											"nodeType": "YulIf",
											"src": "390:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "452:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "467:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "481:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "471:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "496:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "531:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "542:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "551:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "506:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "506:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "496:6:2"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "579:118:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "594:16:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "608:2:2",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "598:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "624:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "659:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "670:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "655:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "679:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "634:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "634:53:2"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "624:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "342:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "353:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "365:6:2",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "373:6:2",
										"type": ""
									}
								],
								"src": "297:407:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "769:50:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "786:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "806:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "791:14:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "791:21:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "779:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "779:34:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "779:34:2"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "757:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "764:3:2",
										"type": ""
									}
								],
								"src": "710:109:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "890:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "907:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "930:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "912:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "912:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "900:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "900:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "900:37:2"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "878:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "885:3:2",
										"type": ""
									}
								],
								"src": "825:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1041:118:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1051:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1063:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1074:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1059:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1059:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1051:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1125:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1138:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1149:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1134:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1134:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1087:37:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1087:65:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1087:65:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1013:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1025:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1036:4:2",
										"type": ""
									}
								],
								"src": "949:210:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1263:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1273:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1285:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1296:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1281:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1281:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1273:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1353:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1366:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1377:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1362:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1362:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1309:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1309:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1309:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1235:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1247:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1258:4:2",
										"type": ""
									}
								],
								"src": "1165:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1437:261:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1447:25:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1470:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1452:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1452:20:2"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "1447:1:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1481:25:2",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1504:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1486:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1486:20:2"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "1481:1:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1644:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "1646:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "1646:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1646:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1565:1:2"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1572:66:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "1640:1:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1568:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1568:74:2"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "1562:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1562:81:2"
											},
											"nodeType": "YulIf",
											"src": "1559:2:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1676:16:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1687:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1690:1:2"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1683:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1683:9:2"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "1676:3:2"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "1424:1:2",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "1427:1:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "1433:3:2",
										"type": ""
									}
								],
								"src": "1393:305:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1749:146:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1759:25:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1782:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1764:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1764:20:2"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "1759:1:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1793:25:2",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1816:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1798:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1798:20:2"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "1793:1:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1840:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "1842:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "1842:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1842:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1834:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1837:1:2"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "1831:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1831:8:2"
											},
											"nodeType": "YulIf",
											"src": "1828:2:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1872:17:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1884:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1887:1:2"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1880:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1880:9:2"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "1872:4:2"
												}
											]
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "1735:1:2",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "1738:1:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "1744:4:2",
										"type": ""
									}
								],
								"src": "1704:191:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1946:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1956:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1985:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1967:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1967:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1956:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1928:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1938:7:2",
										"type": ""
									}
								],
								"src": "1901:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2045:48:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2055:32:2",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2080:5:2"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2073:6:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2073:13:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2066:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2066:21:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2055:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2027:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2037:7:2",
										"type": ""
									}
								],
								"src": "2003:90:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2144:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2154:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2169:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2176:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2165:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2165:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2154:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2126:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2136:7:2",
										"type": ""
									}
								],
								"src": "2099:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2276:32:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2286:16:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2297:5:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2286:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2258:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2268:7:2",
										"type": ""
									}
								],
								"src": "2231:77:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2342:152:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2359:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2362:77:2",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2352:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2352:88:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2352:88:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2456:1:2",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2459:4:2",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2449:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2449:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2449:15:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2480:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2483:4:2",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2473:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2473:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2473:15:2"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "2314:180:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2543:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2600:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2609:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2612:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2602:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2602:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2602:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2566:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2591:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2573:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2563:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2563:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2556:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2556:43:2"
											},
											"nodeType": "YulIf",
											"src": "2553:2:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2536:5:2",
										"type": ""
									}
								],
								"src": "2500:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2671:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2728:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2737:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2740:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2730:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2730:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2730:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2694:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2719:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2701:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2691:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2691:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2684:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2684:43:2"
											},
											"nodeType": "YulIf",
											"src": "2681:2:2"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2664:5:2",
										"type": ""
									}
								],
								"src": "2628:122:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806318160ddd1461003b578063a9059cbb14610059575b600080fd5b610043610089565b604051610050919061039f565b60405180910390f35b610073600480360381019061006e919061032a565b610093565b6040516100809190610384565b60405180910390f35b6000600254905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156100e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561011a57600080fd5b61016b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102af90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506101fe826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161029d919061039f565b60405180910390a36001905092915050565b6000828211156102be57600080fd5b600082846102cc9190610410565b90508091505092915050565b60008082846102e791906103ba565b9050838110156102f657600080fd5b8091505092915050565b60008135905061030f816104bb565b92915050565b600081359050610324816104d2565b92915050565b6000806040838503121561033d57600080fd5b600061034b85828601610300565b925050602061035c85828601610315565b9150509250929050565b61036f81610456565b82525050565b61037e81610482565b82525050565b60006020820190506103996000830184610366565b92915050565b60006020820190506103b46000830184610375565b92915050565b60006103c582610482565b91506103d083610482565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104055761040461048c565b5b828201905092915050565b600061041b82610482565b915061042683610482565b9250828210156104395761043861048c565b5b828203905092915050565b600061044f82610462565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c481610444565b81146104cf57600080fd5b50565b6104db81610482565b81146104e657600080fd5b5056fea2646970667358221220deadd4e0cb6ef5bd54778a95dd0eb86ce10b9b80ec8de1bc287f615c764b174364736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FE DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x3BA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x324 DUP2 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP6 DUP3 DUP7 ADD PUSH2 0x300 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35C DUP6 DUP3 DUP7 ADD PUSH2 0x315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x456 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x399 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D0 DUP4 PUSH2 0x482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP3 PUSH2 0x482 JUMP JUMPDEST SWAP2 POP PUSH2 0x426 DUP4 PUSH2 0x482 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x439 JUMPI PUSH2 0x438 PUSH2 0x48C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP3 PUSH2 0x462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x444 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DB DUP2 PUSH2 0x482 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xAD 0xD4 0xE0 0xCB PUSH15 0xF5BD54778A95DD0EB86CE10B9B80EC DUP14 0xE1 0xBC 0x28 PUSH32 0x615C764B174364736F6C63430008000033000000000000000000000000000000 ",
			"sourceMap": "87:756:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;390:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:91;436:7;462:12;;455:19;;390:91;:::o;487:349::-;552:4;586:8;:20;595:10;586:20;;;;;;;;;;;;;;;;576:6;:30;;568:39;;;;;;640:1;625:17;;:3;:17;;;;617:26;;;;;;677:32;702:6;677:8;:20;686:10;677:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;654:8;:20;663:10;654:20;;;;;;;;;;;;;;;:55;;;;735:25;753:6;735:8;:13;744:3;735:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;719:8;:13;728:3;719:13;;;;;;;;;;;;;;;:41;;;;796:3;775:33;;784:10;775:33;;;801:6;775:33;;;;;;:::i;:::-;;;;;;;;825:4;818:11;;487:349;;;;:::o;1156:145:1:-;1214:7;1246:1;1241;:6;;1233:15;;;;;;1258:9;1274:1;1270;:5;;;;:::i;:::-;1258:17;;1293:1;1286:8;;;1156:145;;;;:::o;1384:::-;1442:7;1461:9;1477:1;1473;:5;;;;:::i;:::-;1461:17;;1501:1;1496;:6;;1488:15;;;;;;1521:1;1514:8;;;1384:145;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:109::-;791:21;806:5;791:21;:::i;:::-;786:3;779:34;769:50;;:::o;825:118::-;912:24;930:5;912:24;:::i;:::-;907:3;900:37;890:53;;:::o;949:210::-;;1074:2;1063:9;1059:18;1051:26;;1087:65;1149:1;1138:9;1134:17;1125:6;1087:65;:::i;:::-;1041:118;;;;:::o;1165:222::-;;1296:2;1285:9;1281:18;1273:26;;1309:71;1377:1;1366:9;1362:17;1353:6;1309:71;:::i;:::-;1263:124;;;;:::o;1393:305::-;;1452:20;1470:1;1452:20;:::i;:::-;1447:25;;1486:20;1504:1;1486:20;:::i;:::-;1481:25;;1640:1;1572:66;1568:74;1565:1;1562:81;1559:2;;;1646:18;;:::i;:::-;1559:2;1690:1;1687;1683:9;1676:16;;1437:261;;;;:::o;1704:191::-;;1764:20;1782:1;1764:20;:::i;:::-;1759:25;;1798:20;1816:1;1798:20;:::i;:::-;1793:25;;1837:1;1834;1831:8;1828:2;;;1842:18;;:::i;:::-;1828:2;1887:1;1884;1880:9;1872:17;;1749:146;;;;:::o;1901:96::-;;1967:24;1985:5;1967:24;:::i;:::-;1956:35;;1946:51;;;:::o;2003:90::-;;2080:5;2073:13;2066:21;2055:32;;2045:48;;;:::o;2099:126::-;;2176:42;2169:5;2165:54;2154:65;;2144:81;;;:::o;2231:77::-;;2297:5;2286:16;;2276:32;;;:::o;2314:180::-;2362:77;2359:1;2352:88;2459:4;2456:1;2449:15;2483:4;2480:1;2473:15;2500:122;2573:24;2591:5;2573:24;:::i;:::-;2566:5;2563:35;2553:2;;2612:1;2609;2602:12;2553:2;2543:79;:::o;2628:122::-;2701:24;2719:5;2701:24;:::i;:::-;2694:5;2691:35;2681:2;;2740:1;2737;2730:12;2681:2;2671:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "262200",
				"executionCost": "300",
				"totalCost": "262500"
			},
			"external": {
				"totalSupply()": "1115",
				"transfer(address,uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"totalSupply()": "18160ddd",
			"transfer(address,uint256)": "a9059cbb"
		}
	},
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_sender",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}